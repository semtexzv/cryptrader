{"version":3,"sources":["../src/utils/isBrowser.js","../src/utils/debounce.js","../src/utils/isFunction.js","../src/utils/getStyleComputedProperty.js","../src/utils/getParentNode.js","../src/utils/getScrollParent.js","../src/utils/isIE.js","../src/utils/getOffsetParent.js","../src/utils/isOffsetContainer.js","../src/utils/getRoot.js","../src/utils/findCommonOffsetParent.js","../src/utils/getScroll.js","../src/utils/includeScroll.js","../src/utils/getBordersSize.js","../src/utils/getWindowSizes.js","../src/utils/getClientRect.js","../src/utils/getBoundingClientRect.js","../src/utils/getOffsetRectRelativeToArbitraryNode.js","../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/utils/isFixed.js","../src/utils/getFixedPositionOffsetParent.js","../src/utils/getBoundaries.js","../src/utils/computeAutoPlacement.js","../src/utils/getReferenceOffsets.js","../src/utils/getOuterSizes.js","../src/utils/getOppositePlacement.js","../src/utils/getPopperOffsets.js","../src/utils/find.js","../src/utils/findIndex.js","../src/utils/runModifiers.js","../src/methods/update.js","../src/utils/isModifierEnabled.js","../src/utils/getSupportedPropertyName.js","../src/methods/destroy.js","../src/utils/getWindow.js","../src/utils/setupEventListeners.js","../src/methods/enableEventListeners.js","../src/utils/removeEventListeners.js","../src/methods/disableEventListeners.js","../src/utils/isNumeric.js","../src/utils/setStyles.js","../src/utils/setAttributes.js","../src/modifiers/applyStyle.js","../src/utils/getRoundedOffsets.js","../src/modifiers/computeStyle.js","../src/utils/isModifierRequired.js","../src/modifiers/arrow.js","../src/utils/getOppositeVariation.js","../src/methods/placements.js","../src/utils/clockwise.js","../src/modifiers/flip.js","../src/modifiers/keepTogether.js","../src/modifiers/offset.js","../src/modifiers/preventOverflow.js","../src/modifiers/shift.js","../src/modifiers/hide.js","../src/modifiers/inner.js","../src/modifiers/index.js","../src/methods/defaults.js","../src/index.js"],"names":["window","document","longerTimeoutBrowsers","timeoutDuration","i","length","isBrowser","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","ownerDocument","defaultView","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","Object","keys","map","key","sort","a","b","area","filteredAreas","filter","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","findIndex","prop","value","cur","match","obj","runModifiers","modifiers","data","ends","modifiersToRun","undefined","slice","forEach","warn","enabled","update","isDestroyed","options","positionFixed","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","attributes","setAttribute","applyStyle","instance","arrowElement","arrowStyles","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","sameWidthParity","bothOddWidth","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","validPlacements","placements","clockwise","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","escapeWithReference","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","Popper","requestAnimationFrame","debounce","bind","Defaults","jquery","onLoad","Utils","global","PopperUtils"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,SAAA,GAAe,OAAOA,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,QAAP,KAAoB,WAApE;ACEA,MAAMC,qBAAAA,GAAwB,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,CAA9B;AACA,IAAIC,eAAAA,GAAkB,CAAtB;;AACA,KAAK,IAAIC,CAAAA,GAAI,CAAb,EAAgBA,CAAAA,GAAIF,qBAAAA,CAAsBG,MAA1C,EAAkDD,CAAAA,IAAK,CAAvD,EAA0D;MACpDE,SAAAA,IAAaC,SAAAA,CAAUC,SAAVD,CAAoBE,OAApBF,CAA4BL,qBAAAA,CAAsBE,CAAtBF,CAA5BK,KAAyD,GAAG;sBACzD;;;;;AAKtB,SAAgBG,iBAAhB,CAAkCC,EAAlC,EAAsC;MAChCC,MAAAA,GAAS;SACN,MAAM;QACPA,QAAQ;;;;aAGH;WACFC,QAAQC,UAAUC,KAAK,MAAM;eACzB;;AADX;AALF;;;AAYF,SAAgBC,YAAhB,CAA6BL,EAA7B,EAAiC;MAC3BM,SAAAA,GAAY;SACT,MAAM;QACP,CAACA,WAAW;kBACF;iBACD,MAAM;oBACH;;AADd,SAGGd;;AANP;;;AAWF,MAAMe,kBAAAA,GAAqBZ,SAAAA,IAAaN,MAAAA,CAAOa,OAA/C;;;;;;;;;;;AAYA,IAAA,QAAA,GAAgBK,kBAAAA,GACZR,iBADYQ,GAEZF,YAFJ;AClDA;;;;;;;;AAOA,SAAwBG,UAAxB,CAAmCC,eAAnC,EAAoD;QAC5CC,OAAAA,GAAU;SAEdD,eAAAA,IACAC,OAAAA,CAAQC,QAARD,CAAiBE,IAAjBF,CAAsBD,eAAtBC,MAA2C;;ACX/C;;;;;;;;;AAOA,SAAwBG,wBAAxB,CAAiDC,OAAjD,EAA0DC,QAA1D,EAAoE;MAC9DD,OAAAA,CAAQE,QAARF,KAAqB,GAAG;WACnB;GAFyD;;;QAK5DzB,MAAAA,GAASyB,OAAAA,CAAQG,aAARH,CAAsBI;QAC/BC,GAAAA,GAAM9B,MAAAA,CAAO+B,gBAAP/B,CAAwByB,OAAxBzB,EAAiC,IAAjCA;SACL0B,QAAAA,GAAWI,GAAAA,CAAIJ,QAAJI,CAAXJ,GAA2BI;;ACdpC;;;;;;;;;AAOA,SAAwBE,aAAxB,CAAsCP,OAAtC,EAA+C;MACzCA,OAAAA,CAAQQ,QAARR,KAAqB,QAAQ;WACxBA;;;SAEFA,OAAAA,CAAQS,UAART,IAAsBA,OAAAA,CAAQU;;ACRvC;;;;;;;;;AAOA,SAAwBC,eAAxB,CAAwCX,OAAxC,EAAiD;;MAE3C,CAACA,SAAS;WACLxB,QAAAA,CAASoC;;;UAGVZ,OAAAA,CAAQQ;SACT;SACA;aACIR,OAAAA,CAAQG,aAARH,CAAsBY;;SAC1B;aACIZ,OAAAA,CAAQY;GAX4B;;;QAezC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAqChB,wBAAAA,CAAyBC,OAAzBD;;MACvC,wBAAwBiB,IAAxB,CAA6BH,QAAAA,GAAWE,SAAXF,GAAuBC,SAApD,GAAgE;WAC3Dd;;;SAGFW,eAAAA,CAAgBJ,aAAAA,CAAcP,OAAdO,CAAhBI;;;AC5BT,MAAMM,MAAAA,GAASpC,SAAAA,IAAa,CAAC,EAAEN,MAAAA,CAAO2C,oBAAP3C,IAA+BC,QAAAA,CAAS2C,YAA1C,CAA7B;AACA,MAAMC,MAAAA,GAASvC,SAAAA,IAAa,UAAUmC,IAAV,CAAelC,SAAAA,CAAUC,SAAzB,CAA5B;;;;;;;;;AASA,SAAwBsC,IAAxB,CAA6BC,OAA7B,EAAsC;MAChCA,OAAAA,KAAY,IAAI;WACXL;;;MAELK,OAAAA,KAAY,IAAI;WACXF;;;SAEFH,MAAAA,IAAUG;;ACjBnB;;;;;;;;;AAOA,SAAwBG,eAAxB,CAAwCvB,OAAxC,EAAiD;MAC3C,CAACA,SAAS;WACLxB,QAAAA,CAASgD;;;QAGZC,cAAAA,GAAiBJ,IAAAA,CAAK,EAALA,CAAAA,GAAW7C,QAAAA,CAASoC,IAApBS,GAA2B,KALH;;MAQ3CK,YAAAA,GAAe1B,OAAAA,CAAQ0B,YAAR1B,IAAwB,KARI;;SAUxC0B,YAAAA,KAAiBD,cAAjBC,IAAmC1B,OAAAA,CAAQ2B,oBAAoB;mBACrD,CAAC3B,OAAAA,GAAUA,OAAAA,CAAQ2B,kBAAnB,EAAuCD;;;QAGlDlB,QAAAA,GAAWkB,YAAAA,IAAgBA,YAAAA,CAAalB;;MAE1C,CAACA,QAAD,IAAaA,QAAAA,KAAa,MAA1B,IAAoCA,QAAAA,KAAa,QAAQ;WACpDR,OAAAA,GAAUA,OAAAA,CAAQG,aAARH,CAAsBwB,eAAhCxB,GAAkDxB,QAAAA,CAASgD;GAjBrB;;;;MAuB7C,CAAC,IAAD,EAAO,IAAP,EAAa,OAAb,EAAsBxC,OAAtB,CAA8B0C,YAAAA,CAAalB,QAA3C,MAAyD,CAAC,CAA1D,IACAT,wBAAAA,CAAyB2B,YAAzB3B,EAAuC,UAAvCA,CAAAA,KAAuD,UACvD;WACOwB,eAAAA,CAAgBG,YAAhBH;;;SAGFG;;;ACpCM,SAASE,iBAAT,CAA2B5B,OAA3B,EAAoC;QAC3C;AAAEQ,IAAAA;AAAF,MAAeR;;MACjBQ,QAAAA,KAAa,QAAQ;WAChB;;;SAGPA,QAAAA,KAAa,MAAbA,IAAuBe,eAAAA,CAAgBvB,OAAAA,CAAQ6B,iBAAxBN,CAAAA,KAA+CvB;;ACR1E;;;;;;;;;AAOA,SAAwB8B,OAAxB,CAAgCC,IAAhC,EAAsC;MAChCA,IAAAA,CAAKtB,UAALsB,KAAoB,MAAM;WACrBD,OAAAA,CAAQC,IAAAA,CAAKtB,UAAbqB;;;SAGFC;;ACRT;;;;;;;;;;AAQA,SAAwBC,sBAAxB,CAA+CC,QAA/C,EAAyDC,QAAzD,EAAmE;;MAE7D,CAACD,QAAD,IAAa,CAACA,QAAAA,CAAS/B,QAAvB,IAAmC,CAACgC,QAApC,IAAgD,CAACA,QAAAA,CAAShC,UAAU;WAC/D1B,QAAAA,CAASgD;GAH+C;;;QAO3DW,KAAAA,GACJF,QAAAA,CAASG,uBAATH,CAAiCC,QAAjCD,IACAI,IAAAA,CAAKC;QACDC,KAAAA,GAAQJ,KAAAA,GAAQF,QAARE,GAAmBD;QAC3BM,GAAAA,GAAML,KAAAA,GAAQD,QAARC,GAAmBF,SAXkC;;QAc3DQ,KAAAA,GAAQjE,QAAAA,CAASkE,WAATlE;QACRmE,SAASJ,OAAO;QAChBK,OAAOJ,KAAK;QACZ;AAAEK,IAAAA;AAAF,MAA8BJ,MAjB6B;;MAqB9DR,QAAAA,KAAaY,uBAAbZ,IACCC,QAAAA,KAAaW,uBADdZ,IAEDM,KAAAA,CAAMO,QAANP,CAAeC,GAAfD,GACA;QACIX,iBAAAA,CAAkBiB,uBAAlBjB,GAA4C;aACvCiB;;;WAGFtB,eAAAA,CAAgBsB,uBAAhBtB;GA7BwD;;;QAiC3DwB,YAAAA,GAAejB,OAAAA,CAAQG,QAARH;;MACjBiB,YAAAA,CAAarC,MAAM;WACdsB,sBAAAA,CAAuBe,YAAAA,CAAarC,IAApCsB,EAA0CE,QAA1CF;AADT,SAEO;WACEA,sBAAAA,CAAuBC,QAAvBD,EAAiCF,OAAAA,CAAQI,QAARJ,CAAAA,CAAkBpB,IAAnDsB;;;ACjDX;;;;;;;;;;AAQA,SAAwBgB,SAAxB,CAAkChD,OAAlC,EAA2CiD,IAAAA,GAAO,KAAlD,EAAyD;QACjDC,SAAAA,GAAYD,IAAAA,KAAS,KAATA,GAAiB,WAAjBA,GAA+B;QAC3CzC,QAAAA,GAAWR,OAAAA,CAAQQ;;MAErBA,QAAAA,KAAa,MAAbA,IAAuBA,QAAAA,KAAa,QAAQ;UACxC2C,IAAAA,GAAOnD,OAAAA,CAAQG,aAARH,CAAsBwB;UAC7B4B,gBAAAA,GAAmBpD,OAAAA,CAAQG,aAARH,CAAsBoD,gBAAtBpD,IAA0CmD;WAC5DC,gBAAAA,CAAiBF,SAAjBE;;;SAGFpD,OAAAA,CAAQkD,SAARlD;;AChBT;;;;;;;;;;;AASA,SAAwBqD,aAAxB,CAAsCC,IAAtC,EAA4CtD,OAA5C,EAAqDuD,QAAAA,GAAW,KAAhE,EAAuE;QAC/DC,SAAAA,GAAYR,SAAAA,CAAUhD,OAAVgD,EAAmB,KAAnBA;QACZS,UAAAA,GAAaT,SAAAA,CAAUhD,OAAVgD,EAAmB,MAAnBA;QACbU,QAAAA,GAAWH,QAAAA,GAAW,CAAC,CAAZA,GAAgB;OAC5BI,OAAOH,SAAAA,GAAYE;OACnBE,UAAUJ,SAAAA,GAAYE;OACtBG,QAAQJ,UAAAA,GAAaC;OACrBI,SAASL,UAAAA,GAAaC;SACpBJ;;ACnBT;;;;;;;;;;;AAUA,SAAwBS,cAAxB,CAAuCC,MAAvC,EAA+CC,IAA/C,EAAqD;QAC7CC,KAAAA,GAAQD,IAAAA,KAAS,GAATA,GAAe,MAAfA,GAAwB;QAChCE,KAAAA,GAAQD,KAAAA,KAAU,MAAVA,GAAmB,OAAnBA,GAA6B;SAGzCE,UAAAA,CAAWJ,MAAAA,CAAQ,SAAQE,KAAM,OAAtBF,CAAXI,EAA0C,EAA1CA,CAAAA,GACAA,UAAAA,CAAWJ,MAAAA,CAAQ,SAAQG,KAAM,OAAtBH,CAAXI,EAA0C,EAA1CA;;;ACdJ,SAASC,OAAT,CAAiBJ,IAAjB,EAAuBrD,IAAvB,EAA6BuC,IAA7B,EAAmCmB,aAAnC,EAAkD;SACzCC,IAAAA,CAAKC,GAALD,CACL3D,IAAAA,CAAM,SAAQqD,IAAK,EAAnBrD,CADK2D,EAEL3D,IAAAA,CAAM,SAAQqD,IAAK,EAAnBrD,CAFK2D,EAGLpB,IAAAA,CAAM,SAAQc,IAAK,EAAnBd,CAHKoB,EAILpB,IAAAA,CAAM,SAAQc,IAAK,EAAnBd,CAJKoB,EAKLpB,IAAAA,CAAM,SAAQc,IAAK,EAAnBd,CALKoB,EAMLlD,IAAAA,CAAK,EAALA,CAAAA,GACKoD,QAAAA,CAAStB,IAAAA,CAAM,SAAQc,IAAK,EAAnBd,CAATsB,CAAAA,GACHA,QAAAA,CAASH,aAAAA,CAAe,SAAQL,IAAAA,KAAS,QAATA,GAAoB,KAApBA,GAA4B,MAAO,EAA1DK,CAATG,CADGA,GAEHA,QAAAA,CAASH,aAAAA,CAAe,SAAQL,IAAAA,KAAS,QAATA,GAAoB,QAApBA,GAA+B,OAAQ,EAA9DK,CAATG,CAHFpD,GAIE,CAVGkD;;;AAcT,SAAwBG,cAAxB,CAAuClG,QAAvC,EAAiD;QACzCoC,IAAAA,GAAOpC,QAAAA,CAASoC;QAChBuC,IAAAA,GAAO3E,QAAAA,CAASgD;QAChB8C,aAAAA,GAAgBjD,IAAAA,CAAK,EAALA,CAAAA,IAAYf,gBAAAA,CAAiB6C,IAAjB7C;SAE3B;YACG+D,OAAAA,CAAQ,QAARA,EAAkBzD,IAAlByD,EAAwBlB,IAAxBkB,EAA8BC,aAA9BD,CADH;WAEEA,OAAAA,CAAQ,OAARA,EAAiBzD,IAAjByD,EAAuBlB,IAAvBkB,EAA6BC,aAA7BD;AAFF;;;;;;;;;;;;;;;;ACtBT;;;;;;;;;AAOA,SAAwBM,aAAxB,CAAsCC,OAAtC,EAA+C;sBAExCA,SADL;WAESA,OAAAA,CAAQf,IAARe,GAAeA,OAAAA,CAAQC,KAFhC;YAGUD,OAAAA,CAAQjB,GAARiB,GAAcA,OAAAA,CAAQE;AAHhC;;ACDF;;;;;;;;;AAOA,SAAwBC,qBAAxB,CAA8C/E,OAA9C,EAAuD;MACjDsD,IAAAA,GAAO,GAD0C;;;;MAMjD;QACEjC,IAAAA,CAAK,EAALA,GAAU;aACLrB,OAAAA,CAAQ+E,qBAAR/E;YACDwD,SAAAA,GAAYR,SAAAA,CAAUhD,OAAVgD,EAAmB,KAAnBA;YACZS,UAAAA,GAAaT,SAAAA,CAAUhD,OAAVgD,EAAmB,MAAnBA;WACdW,OAAOH;WACPK,QAAQJ;WACRG,UAAUJ;WACVM,SAASL;AAPhB,WASK;aACIzD,OAAAA,CAAQ+E,qBAAR/E;;AAXX,IAcA,OAAMgF,CAAN,EAAQ,CAAA;;QAEFC,MAAAA,GAAS;UACP3B,IAAAA,CAAKO,IADE;SAERP,IAAAA,CAAKK,GAFG;WAGNL,IAAAA,CAAKQ,KAALR,GAAaA,IAAAA,CAAKO,IAHZ;YAILP,IAAAA,CAAKM,MAALN,GAAcA,IAAAA,CAAKK;AAJd,IAtBsC;;QA8B/CuB,KAAAA,GAAQlF,OAAAA,CAAQQ,QAARR,KAAqB,MAArBA,GAA8B0E,cAAAA,CAAe1E,OAAAA,CAAQG,aAAvBuE,CAA9B1E,GAAsE;QAC9E6E,KAAAA,GACJK,KAAAA,CAAML,KAANK,IAAelF,OAAAA,CAAQmF,WAAvBD,IAAsCD,MAAAA,CAAOnB,KAAPmB,GAAeA,MAAAA,CAAOpB;QACxDiB,MAAAA,GACJI,KAAAA,CAAMJ,MAANI,IAAgBlF,OAAAA,CAAQoF,YAAxBF,IAAwCD,MAAAA,CAAOrB,MAAPqB,GAAgBA,MAAAA,CAAOtB;MAE7D0B,cAAAA,GAAiBrF,OAAAA,CAAQsF,WAARtF,GAAsB6E;MACvCU,aAAAA,GAAgBvF,OAAAA,CAAQwF,YAARxF,GAAuB8E,OArCU;;;MAyCjDO,cAAAA,IAAkBE,eAAe;UAC7BvB,MAAAA,GAASjE,wBAAAA,CAAyBC,OAAzBD;sBACGgE,cAAAA,CAAeC,MAAfD,EAAuB,GAAvBA;qBACDA,cAAAA,CAAeC,MAAfD,EAAuB,GAAvBA;WAEVc,SAASQ;WACTP,UAAUS;;;SAGZZ,aAAAA,CAAcM,MAAdN;;;ACzDM,SAASc,oCAAT,CAA8CC,QAA9C,EAAwDC,MAAxD,EAAgEC,aAAAA,GAAgB,KAAhF,EAAuF;QAC9FxE,MAAAA,GAASyE,IAAAA,CAAQ,EAARA;QACTC,MAAAA,GAASH,MAAAA,CAAOnF,QAAPmF,KAAoB;QAC7BI,YAAAA,GAAehB,qBAAAA,CAAsBW,QAAtBX;QACfiB,UAAAA,GAAajB,qBAAAA,CAAsBY,MAAtBZ;QACbkB,YAAAA,GAAetF,eAAAA,CAAgB+E,QAAhB/E;QAEfqD,MAAAA,GAASjE,wBAAAA,CAAyB4F,MAAzB5F;QACTmG,cAAAA,GAAiB9B,UAAAA,CAAWJ,MAAAA,CAAOkC,cAAlB9B,EAAkC,EAAlCA;QACjB+B,eAAAA,GAAkB/B,UAAAA,CAAWJ,MAAAA,CAAOmC,eAAlB/B,EAAmC,EAAnCA,EAT4E;;MAYjGwB,aAAAA,IAAiBE,QAAQ;eACfnC,MAAMY,IAAAA,CAAKC,GAALD,CAASyB,UAAAA,CAAWrC,GAApBY,EAAyB,CAAzBA;eACNV,OAAOU,IAAAA,CAAKC,GAALD,CAASyB,UAAAA,CAAWnC,IAApBU,EAA0B,CAA1BA;;;MAEhBK,OAAAA,GAAUD,aAAAA,CAAc;SACrBoB,YAAAA,CAAapC,GAAboC,GAAmBC,UAAAA,CAAWrC,GAA9BoC,GAAoCG,cADf;UAEpBH,YAAAA,CAAalC,IAAbkC,GAAoBC,UAAAA,CAAWnC,IAA/BkC,GAAsCI,eAFlB;WAGnBJ,YAAAA,CAAalB,KAHM;YAIlBkB,YAAAA,CAAajB;AAJK,GAAdH;UAMNyB,YAAY;UACZC,aAAa,EAvB+E;;;;;MA6BhG,CAACjF,MAAD,IAAW0E,QAAQ;UACfM,SAAAA,GAAYhC,UAAAA,CAAWJ,MAAAA,CAAOoC,SAAlBhC,EAA6B,EAA7BA;UACZiC,UAAAA,GAAajC,UAAAA,CAAWJ,MAAAA,CAAOqC,UAAlBjC,EAA8B,EAA9BA;YAEXT,OAAOuC,cAAAA,GAAiBE;YACxBxC,UAAUsC,cAAAA,GAAiBE;YAC3BvC,QAAQsC,eAAAA,GAAkBE;YAC1BvC,SAASqC,eAAAA,GAAkBE,WAPd;;YAUbD,YAAYA;YACZC,aAAaA;;;MAIrBjF,MAAAA,IAAU,CAACwE,aAAXxE,GACIuE,MAAAA,CAAO7C,QAAP6C,CAAgBM,YAAhBN,CADJvE,GAEIuE,MAAAA,KAAWM,YAAXN,IAA2BM,YAAAA,CAAazF,QAAbyF,KAA0B,QACzD;cACU5C,aAAAA,CAAcuB,OAAdvB,EAAuBsC,MAAvBtC;;;SAGLuB;;;ACtDM,SAAS0B,6CAAT,CAAuDtG,OAAvD,EAAgEuG,aAAAA,GAAgB,KAAhF,EAAuF;QAC9FpD,IAAAA,GAAOnD,OAAAA,CAAQG,aAARH,CAAsBwB;QAC7BgF,cAAAA,GAAiBf,oCAAAA,CAAqCzF,OAArCyF,EAA8CtC,IAA9CsC;QACjBZ,KAAAA,GAAQN,IAAAA,CAAKC,GAALD,CAASpB,IAAAA,CAAKgC,WAAdZ,EAA2BhG,MAAAA,CAAOkI,UAAPlI,IAAqB,CAAhDgG;QACRO,MAAAA,GAASP,IAAAA,CAAKC,GAALD,CAASpB,IAAAA,CAAKiC,YAAdb,EAA4BhG,MAAAA,CAAOmI,WAAPnI,IAAsB,CAAlDgG;QAETf,SAAAA,GAAY,CAAC+C,aAAD,GAAiBvD,SAAAA,CAAUG,IAAVH,CAAjB,GAAmC;QAC/CS,UAAAA,GAAa,CAAC8C,aAAD,GAAiBvD,SAAAA,CAAUG,IAAVH,EAAgB,MAAhBA,CAAjB,GAA2C;QAExD2D,MAAAA,GAAS;SACRnD,SAAAA,GAAYgD,cAAAA,CAAe7C,GAA3BH,GAAiCgD,cAAAA,CAAeJ,SADxC;UAEP3C,UAAAA,GAAa+C,cAAAA,CAAe3C,IAA5BJ,GAAmC+C,cAAAA,CAAeH,UAF3C;SAAA;;AAAA;SAOR1B,aAAAA,CAAcgC,MAAdhC;;ACjBT;;;;;;;;;;AAQA,SAAwBiC,OAAxB,CAAgC5G,OAAhC,EAAyC;QACjCQ,QAAAA,GAAWR,OAAAA,CAAQQ;;MACrBA,QAAAA,KAAa,MAAbA,IAAuBA,QAAAA,KAAa,QAAQ;WACvC;;;MAELT,wBAAAA,CAAyBC,OAAzBD,EAAkC,UAAlCA,CAAAA,KAAkD,SAAS;WACtD;;;QAEHU,UAAAA,GAAaF,aAAAA,CAAcP,OAAdO;;MACf,CAACE,YAAY;WACR;;;SAEFmG,OAAAA,CAAQnG,UAARmG;;ACrBT;;;;;;;;;AAQA,SAAwBC,4BAAxB,CAAqD7G,OAArD,EAA8D;;MAEvD,CAACA,OAAD,IAAY,CAACA,OAAAA,CAAQ8G,aAArB,IAAsCzF,IAAAA,IAAQ;WAC1C7C,QAAAA,CAASgD;;;MAEduF,EAAAA,GAAK/G,OAAAA,CAAQ8G;;SACVC,EAAAA,IAAMhH,wBAAAA,CAAyBgH,EAAzBhH,EAA6B,WAA7BA,CAAAA,KAA8C,QAAQ;SAC5DgH,EAAAA,CAAGD;;;SAEHC,EAAAA,IAAMvI,QAAAA,CAASgD;;ACVxB;;;;;;;;;;;;;AAWA,SAAwBwF,aAAxB,CACEC,MADF,EAEEC,SAFF,EAGEC,OAHF,EAIEC,iBAJF,EAKExB,aAAAA,GAAgB,KALlB,EAME;;MAGIyB,UAAAA,GAAa;AAAE1D,IAAAA,GAAAA,EAAK,CAAP;AAAUE,IAAAA,IAAAA,EAAM;AAAhB;QACXnC,YAAAA,GAAekE,aAAAA,GAAgBiB,4BAAAA,CAA6BI,MAA7BJ,CAAhBjB,GAAuD5D,sBAAAA,CAAuBiF,MAAvBjF,EAA+BkF,SAA/BlF,EAJ5E;;MAOIoF,iBAAAA,KAAsB,YAAa;iBACxBd,6CAAAA,CAA8C5E,YAA9C4E,EAA4DV,aAA5DU;AADf,SAIK;;QAECgB;;QACAF,iBAAAA,KAAsB,gBAAgB;uBACvBzG,eAAAA,CAAgBJ,aAAAA,CAAc2G,SAAd3G,CAAhBI;;UACb2G,cAAAA,CAAe9G,QAAf8G,KAA4B,QAAQ;yBACrBL,MAAAA,CAAO9G,aAAP8G,CAAqBzF;;AAH1C,WAKO,IAAI4F,iBAAAA,KAAsB,QAA1B,EAAoC;uBACxBH,MAAAA,CAAO9G,aAAP8G,CAAqBzF;AADjC,KAAA,MAEA;uBACY4F;;;UAGbxC,OAAAA,GAAUa,oCAAAA,CACd6B,cADc7B,EAEd/D,YAFc+D,EAGdG,aAHcH,EAdb;;QAqBC6B,cAAAA,CAAe9G,QAAf8G,KAA4B,MAA5BA,IAAsC,CAACV,OAAAA,CAAQlF,YAARkF,GAAuB;YAC1D;AAAE9B,QAAAA,MAAF;AAAUD,QAAAA;AAAV,UAAoBH,cAAAA,CAAeuC,MAAAA,CAAO9G,aAAtBuE;iBACff,OAAOiB,OAAAA,CAAQjB,GAARiB,GAAcA,OAAAA,CAAQwB;iBAC7BxC,SAASkB,MAAAA,GAASF,OAAAA,CAAQjB;iBAC1BE,QAAQe,OAAAA,CAAQf,IAARe,GAAeA,OAAAA,CAAQyB;iBAC/BvC,QAAQe,KAAAA,GAAQD,OAAAA,CAAQf;AALrC,WAMO;;mBAEQe;;GAxCjB;;;YA6CUuC,OAAAA,IAAW;QACfI,eAAAA,GAAkB,OAAOJ,OAAP,KAAmB;aAChCtD,QAAQ0D,eAAAA,GAAkBJ,OAAlBI,GAA4BJ,OAAAA,CAAQtD,IAARsD,IAAgB;aACpDxD,OAAO4D,eAAAA,GAAkBJ,OAAlBI,GAA4BJ,OAAAA,CAAQxD,GAARwD,IAAe;aAClDrD,SAASyD,eAAAA,GAAkBJ,OAAlBI,GAA4BJ,OAAAA,CAAQrD,KAARqD,IAAiB;aACtDvD,UAAU2D,eAAAA,GAAkBJ,OAAlBI,GAA4BJ,OAAAA,CAAQvD,MAARuD,IAAkB;SAE5DE;;;AC5ET,SAASG,OAAT,CAAiB;AAAE3C,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAjB,EAAoC;SAC3BD,KAAAA,GAAQC;;;;;;;;;;;;;AAYjB,SAAwB2C,oBAAxB,CACEC,SADF,EAEEC,OAFF,EAGEV,MAHF,EAIEC,SAJF,EAKEE,iBALF,EAMED,OAAAA,GAAU,CANZ,EAOE;MACIO,SAAAA,CAAU1I,OAAV0I,CAAkB,MAAlBA,MAA8B,CAAC,GAAG;WAC7BA;;;QAGHL,UAAAA,GAAaL,aAAAA,CACjBC,MADiBD,EAEjBE,SAFiBF,EAGjBG,OAHiBH,EAIjBI,iBAJiBJ;QAObY,KAAAA,GAAQ;SACP;aACIP,UAAAA,CAAWxC,KADf;cAEK8C,OAAAA,CAAQhE,GAARgE,GAAcN,UAAAA,CAAW1D;AAF9B,KADO;WAKL;aACE0D,UAAAA,CAAWvD,KAAXuD,GAAmBM,OAAAA,CAAQ7D,KAD7B;cAEGuD,UAAAA,CAAWvC;AAFd,KALK;YASJ;aACCuC,UAAAA,CAAWxC,KADZ;cAEEwC,UAAAA,CAAWzD,MAAXyD,GAAoBM,OAAAA,CAAQ/D;AAF9B,KATI;UAaN;aACG+D,OAAAA,CAAQ9D,IAAR8D,GAAeN,UAAAA,CAAWxD,IAD7B;cAEIwD,UAAAA,CAAWvC;AAFf;AAbM;QAmBR+C,WAAAA,GAAcC,MAAAA,CAAOC,IAAPD,CAAYF,KAAZE,EACjBE,GADiBF,CACbG,GAAAA,IAAAA,QAAAA,CAAAA;;AAAAA,GAAAA,EAEAL,KAAAA,CAAMK,GAANL,CAFAK,EAAA;UAGGT,OAAAA,CAAQI,KAAAA,CAAMK,GAANL,CAARJ;AAHH,GAAAS,CADaH,EAMjBI,IANiBJ,CAMZ,CAACK,CAAD,EAAIC,CAAJ,KAAUA,CAAAA,CAAEC,IAAFD,GAASD,CAAAA,CAAEE,IANTP;QAQdQ,aAAAA,GAAgBT,WAAAA,CAAYU,MAAZV,CACpB,CAAC;AAAEhD,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KACED,KAAAA,IAASoC,MAAAA,CAAO9B,WAAhBN,IAA+BC,MAAAA,IAAUmC,MAAAA,CAAO7B,YAF9ByC;QAKhBW,iBAAAA,GAAoBF,aAAAA,CAAc1J,MAAd0J,GAAuB,CAAvBA,GACtBA,aAAAA,CAAc,CAAdA,CAAAA,CAAiBL,GADKK,GAEtBT,WAAAA,CAAY,CAAZA,CAAAA,CAAeI;QAEbQ,SAAAA,GAAYf,SAAAA,CAAUgB,KAAVhB,CAAgB,GAAhBA,EAAqB,CAArBA;SAEXc,iBAAAA,IAAqBC,SAAAA,GAAa,IAAGA,SAAU,EAA1BA,GAA8B,EAAnDD;;ACpET;;;;;;;;;;;;AAUA,SAAwBG,mBAAxB,CAA4CC,KAA5C,EAAmD3B,MAAnD,EAA2DC,SAA3D,EAAsEtB,aAAAA,GAAgB,IAAtF,EAA4F;QACpFiD,kBAAAA,GAAqBjD,aAAAA,GAAgBiB,4BAAAA,CAA6BI,MAA7BJ,CAAhBjB,GAAuD5D,sBAAAA,CAAuBiF,MAAvBjF,EAA+BkF,SAA/BlF;SAC3EyD,oCAAAA,CAAqCyB,SAArCzB,EAAgDoD,kBAAhDpD,EAAoEG,aAApEH;;AChBT;;;;;;;;;AAOA,SAAwBqD,aAAxB,CAAsC9I,OAAtC,EAA+C;QACvCzB,MAAAA,GAASyB,OAAAA,CAAQG,aAARH,CAAsBI;QAC/B4D,MAAAA,GAASzF,MAAAA,CAAO+B,gBAAP/B,CAAwByB,OAAxBzB;QACTwK,CAAAA,GAAI3E,UAAAA,CAAWJ,MAAAA,CAAOoC,SAAPpC,IAAoB,CAA/BI,CAAAA,GAAoCA,UAAAA,CAAWJ,MAAAA,CAAOgF,YAAPhF,IAAuB,CAAlCI;QACxC6E,CAAAA,GAAI7E,UAAAA,CAAWJ,MAAAA,CAAOqC,UAAPrC,IAAqB,CAAhCI,CAAAA,GAAqCA,UAAAA,CAAWJ,MAAAA,CAAOkF,WAAPlF,IAAsB,CAAjCI;QACzCa,MAAAA,GAAS;WACNjF,OAAAA,CAAQsF,WAARtF,GAAsBiJ,CADhB;YAELjJ,OAAAA,CAAQwF,YAARxF,GAAuB+I;AAFlB;SAIR9D;;AChBT;;;;;;;;;AAOA,SAAwBkE,oBAAxB,CAA6CzB,SAA7C,EAAwD;QAChD0B,IAAAA,GAAO;AAAEvF,IAAAA,IAAAA,EAAM,OAAR;AAAiBC,IAAAA,KAAAA,EAAO,MAAxB;AAAgCF,IAAAA,MAAAA,EAAQ,KAAxC;AAA+CD,IAAAA,GAAAA,EAAK;AAApD;SACN+D,SAAAA,CAAU2B,OAAV3B,CAAkB,wBAAlBA,EAA4C4B,OAAAA,IAAWF,IAAAA,CAAKE,OAALF,CAAvD1B;;ACNT;;;;;;;;;;;;AAUA,SAAwB6B,gBAAxB,CAAyCtC,MAAzC,EAAiDuC,gBAAjD,EAAmE9B,SAAnE,EAA8E;cAChEA,SAAAA,CAAUgB,KAAVhB,CAAgB,GAAhBA,EAAqB,CAArBA,EADgE;;QAItE+B,UAAAA,GAAaX,aAAAA,CAAc7B,MAAd6B,EAJyD;;QAOtEY,aAAAA,GAAgB;WACbD,UAAAA,CAAW5E,KADE;YAEZ4E,UAAAA,CAAW3E;AAFC,IAPsD;;QAatE6E,OAAAA,GAAU,CAAC,OAAD,EAAU,MAAV,EAAkB3K,OAAlB,CAA0B0I,SAA1B,MAAyC,CAAC;QACpDkC,QAAAA,GAAWD,OAAAA,GAAU,KAAVA,GAAkB;QAC7BE,aAAAA,GAAgBF,OAAAA,GAAU,MAAVA,GAAmB;QACnCG,WAAAA,GAAcH,OAAAA,GAAU,QAAVA,GAAqB;QACnCI,oBAAAA,GAAuB,CAACJ,OAAD,GAAW,QAAX,GAAsB;gBAErCC,YACZJ,gBAAAA,CAAiBI,QAAjBJ,CAAAA,GACAA,gBAAAA,CAAiBM,WAAjBN,CAAAA,GAAgC,CADhCA,GAEAC,UAAAA,CAAWK,WAAXL,CAAAA,GAA0B;;MACxB/B,SAAAA,KAAcmC,eAAe;kBACjBA,iBACZL,gBAAAA,CAAiBK,aAAjBL,CAAAA,GAAkCC,UAAAA,CAAWM,oBAAXN;AAFtC,SAGO;kBACSI,iBACZL,gBAAAA,CAAiBL,oBAAAA,CAAqBU,aAArBV,CAAjBK;;;SAGGE;;AC5CT;;;;;;;;;;;AASA,SAAwBM,IAAxB,CAA6BC,GAA7B,EAAkCC,KAAlC,EAAyC;;MAEnCC,KAAAA,CAAMC,SAAND,CAAgBH,MAAM;WACjBC,GAAAA,CAAID,IAAJC,CAASC,KAATD;GAH8B;;;SAOhCA,GAAAA,CAAI1B,MAAJ0B,CAAWC,KAAXD,EAAkB,CAAlBA;;ACdT;;;;;;;;;;;AASA,SAAwBI,SAAxB,CAAkCJ,GAAlC,EAAuCK,IAAvC,EAA6CC,KAA7C,EAAoD;;MAE9CJ,KAAAA,CAAMC,SAAND,CAAgBE,WAAW;WACtBJ,GAAAA,CAAII,SAAJJ,CAAcO,GAAAA,IAAOA,GAAAA,CAAIF,IAAJE,CAAAA,KAAcD,KAAnCN;GAHyC;;;QAO5CQ,KAAAA,GAAQT,IAAAA,CAAKC,GAALD,EAAUU,GAAAA,IAAOA,GAAAA,CAAIJ,IAAJI,CAAAA,KAAcH,KAA/BP;SACPC,GAAAA,CAAIjL,OAAJiL,CAAYQ,KAAZR;;ACfT;;;;;;;;;;;;AAUA,SAAwBU,YAAxB,CAAqCC,SAArC,EAAgDC,IAAhD,EAAsDC,IAAtD,EAA4D;QACpDC,cAAAA,GAAiBD,IAAAA,KAASE,SAATF,GACnBF,SADmBE,GAEnBF,SAAAA,CAAUK,KAAVL,CAAgB,CAAhBA,EAAmBP,SAAAA,CAAUO,SAAVP,EAAqB,MAArBA,EAA6BS,IAA7BT,CAAnBO;iBAEWM,QAAQxH,QAAAA,IAAY;QAC7BA,QAAAA,CAAS,UAATA,GAAsB;;cAChByH,KAAK;;;UAETjM,EAAAA,GAAKwE,QAAAA,CAAS,UAATA,CAAAA,IAAwBA,QAAAA,CAASxE,GAJX,CAAA;;QAK7BwE,QAAAA,CAAS0H,OAAT1H,IAAoBhE,UAAAA,CAAWR,EAAXQ,GAAgB;;;;WAIjCkF,QAAQqC,SAAStC,aAAAA,CAAckG,IAAAA,CAAKjG,OAALiG,CAAa5D,MAA3BtC;WACjBC,QAAQsC,YAAYvC,aAAAA,CAAckG,IAAAA,CAAKjG,OAALiG,CAAa3D,SAA3BvC;aAElBzF,EAAAA,CAAG2L,IAAH3L,EAASwE,QAATxE;;AAZX;SAgBO2L;;AC9BT;;;;;;;;;AAOA,SAAwBQ,MAAxB,GAAiC;;MAE3B,KAAKzC,KAAL,CAAW0C,aAAa;;;;MAIxBT,IAAAA,GAAO;cACC,IADD;YAED,EAFC;iBAGI,EAHJ;gBAIG,EAJH;aAKA,KALA;aAMA;AANA,IANoB;;OAgB1BjG,QAAQsC,YAAYyB,mBAAAA,CACvB,KAAKC,KADkBD,EAEvB,KAAK1B,MAFkB0B,EAGvB,KAAKzB,SAHkByB,EAIvB,KAAK4C,OAAL,CAAaC,aAJU7C,EAhBM;;;;OA0B1BjB,YAAYD,oBAAAA,CACf,KAAK8D,OAAL,CAAa7D,SADED,EAEfoD,IAAAA,CAAKjG,OAALiG,CAAa3D,SAFEO,EAGf,KAAKR,MAHUQ,EAIf,KAAKP,SAJUO,EAKf,KAAK8D,OAAL,CAAaX,SAAb,CAAuBa,IAAvB,CAA4BrE,iBALbK,EAMf,KAAK8D,OAAL,CAAaX,SAAb,CAAuBa,IAAvB,CAA4BtE,OANbM,EA1Bc;;OAoC1BiE,oBAAoBb,IAAAA,CAAKnD;OAEzB8D,gBAAgB,KAAKD,OAAL,CAAaC,cAtCH;;OAyC1B5G,QAAQqC,SAASsC,gBAAAA,CACpB,KAAKtC,MADesC,EAEpBsB,IAAAA,CAAKjG,OAALiG,CAAa3D,SAFOqC,EAGpBsB,IAAAA,CAAKnD,SAHe6B;OAMjB3E,QAAQqC,OAAO0E,WAAW,KAAKJ,OAAL,CAAaC,aAAb,GAC3B,OAD2B,GAE3B,WAjD2B;;SAoDxBb,YAAAA,CAAa,KAAKC,SAAlBD,EAA6BE,IAA7BF,EApDwB;;;MAwD3B,CAAC,KAAK/B,KAAL,CAAWgD,WAAW;SACpBhD,MAAMgD,YAAY;SAClBL,QAAQM,SAAShB;AAFxB,SAGO;SACAU,QAAQO,SAASjB;;;ACxE1B;;;;;;;;AAMA,SAAwBkB,iBAAxB,CAA0CnB,SAA1C,EAAqDoB,YAArD,EAAmE;SAC1DpB,SAAAA,CAAUqB,IAAVrB,CACL,CAAC;AAAEsB,IAAAA,IAAF;AAAQd,IAAAA;AAAR,GAAD,KAAuBA,OAAAA,IAAWc,IAAAA,KAASF,YADtCpB;;ACPT;;;;;;;;;AAOA,SAAwBuB,wBAAxB,CAAiDlM,QAAjD,EAA2D;QACnDmM,QAAAA,GAAW,CAAC,KAAD,EAAQ,IAAR,EAAc,QAAd,EAAwB,KAAxB,EAA+B,GAA/B;QACXC,SAAAA,GAAYpM,QAAAA,CAASqM,MAATrM,CAAgB,CAAhBA,EAAmBsM,WAAnBtM,KAAmCA,QAAAA,CAASgL,KAAThL,CAAe,CAAfA;;OAEhD,IAAItB,CAAAA,GAAI,GAAGA,CAAAA,GAAIyN,QAAAA,CAASxN,QAAQD,CAAAA,IAAK;UAClC6N,MAAAA,GAASJ,QAAAA,CAASzN,CAATyN;UACTK,OAAAA,GAAUD,MAAAA,GAAU,GAAEA,MAAO,GAAEH,SAAU,EAA/BG,GAAmCvM;;QAC/C,OAAOzB,QAAAA,CAASoC,IAATpC,CAAckO,KAAdlO,CAAoBiO,OAApBjO,CAAP,KAAwC,aAAa;aAChDiO;;;;SAGJ;;ACfT;;;;;;;AAKA,SAAwBE,OAAxB,GAAkC;OAC3B/D,MAAM0C,cAAc,KADO;;MAI5BS,iBAAAA,CAAkB,KAAKnB,SAAvBmB,EAAkC,YAAlCA,GAAiD;SAC9C9E,OAAO2F,gBAAgB;SACvB3F,OAAOyF,MAAMf,WAAW;SACxB1E,OAAOyF,MAAM/I,MAAM;SACnBsD,OAAOyF,MAAM7I,OAAO;SACpBoD,OAAOyF,MAAM5I,QAAQ;SACrBmD,OAAOyF,MAAM9I,SAAS;SACtBqD,OAAOyF,MAAMG,aAAa;SAC1B5F,OAAOyF,MAAMP,wBAAAA,CAAyB,WAAzBA,KAAyC;;;OAGxDW,wBAf2B;;;MAmB5B,KAAKvB,OAAL,CAAawB,iBAAiB;SAC3B9F,OAAOxG,WAAWuM,YAAY,KAAK/F;;;SAEnC;;AC9BT;;;;;;;AAKA,SAAwBgG,SAAxB,CAAkCjN,OAAlC,EAA2C;QACnCG,aAAAA,GAAgBH,OAAAA,CAAQG;SACvBA,aAAAA,GAAgBA,aAAAA,CAAcC,WAA9BD,GAA4C5B;;;ACJrD,SAAS2O,qBAAT,CAA+BjH,YAA/B,EAA6CkH,KAA7C,EAAoDC,QAApD,EAA8DC,aAA9D,EAA6E;QACrEC,MAAAA,GAASrH,YAAAA,CAAazF,QAAbyF,KAA0B;QACnCsH,MAAAA,GAASD,MAAAA,GAASrH,YAAAA,CAAa9F,aAAb8F,CAA2B7F,WAApCkN,GAAkDrH;SAC1DuH,iBAAiBL,OAAOC,UAAU;AAAEK,IAAAA,OAAAA,EAAS;AAAX;;MAErC,CAACH,QAAQ;0BAET3M,eAAAA,CAAgB4M,MAAAA,CAAO9M,UAAvBE,GACAwM,OACAC,UACAC;;;gBAGUK,KAAKH;;;;;;;;;;AASrB,SAAwBI,mBAAxB,CACEzG,SADF,EAEEqE,OAFF,EAGE3C,KAHF,EAIEgF,WAJF,EAKE;;QAEMA,cAAcA;YACV1G,WAAWsG,iBAAiB,UAAU5E,KAAAA,CAAMgF,aAAa;AAAEH,IAAAA,OAAAA,EAAS;AAAX,KAHnE;;QAMMI,aAAAA,GAAgBlN,eAAAA,CAAgBuG,SAAhBvG;wBAEpBkN,eACA,UACAjF,KAAAA,CAAMgF,aACNhF,KAAAA,CAAMyE;QAEFQ,gBAAgBA;QAChBC,gBAAgB;SAEflF;;AC5CT;;;;;;;;AAMA,SAAwBmF,oBAAxB,GAA+C;MACzC,CAAC,KAAKnF,KAAL,CAAWkF,eAAe;SACxBlF,QAAQ+E,mBAAAA,CACX,KAAKzG,SADMyG,EAEX,KAAKpC,OAFMoC,EAGX,KAAK/E,KAHM+E,EAIX,KAAKK,cAJML;;;ACRjB;;;;;;;;AAMA,SAAwBM,oBAAxB,CAA6C/G,SAA7C,EAAwD0B,KAAxD,EAA+D;;YAEnD1B,WAAWgH,oBAAoB,UAAUtF,KAAAA,CAAMgF,aAFI;;QAKvDP,cAAcnC,QAAQqC,MAAAA,IAAU;WAC7BW,oBAAoB,UAAUtF,KAAAA,CAAMgF;AAD7C,KAL6D;;QAUvDA,cAAc;QACdP,gBAAgB;QAChBQ,gBAAgB;QAChBC,gBAAgB;SACflF;;ACpBT;;;;;;;;;AAOA,SAAwBkE,qBAAxB,GAAgD;MAC1C,KAAKlE,KAAL,CAAWkF,eAAe;yBACP,KAAKE;SACrBpF,QAAQqF,oBAAAA,CAAqB,KAAK/G,SAA1B+G,EAAqC,KAAKrF,KAA1CqF;;;ACZjB;;;;;;;;;AAOA,SAAwBE,SAAxB,CAAkCC,CAAlC,EAAqC;SAC5BA,CAAAA,KAAM,EAANA,IAAY,CAACC,KAAAA,CAAMjK,UAAAA,CAAWgK,CAAXhK,CAANiK,CAAbD,IAAqCE,QAAAA,CAASF,CAATE;;ACN9C;;;;;;;;;;AAQA,SAAwBC,SAAxB,CAAkCvO,OAAlC,EAA2CgE,MAA3C,EAAmD;SAC1C+D,KAAK/D,QAAQkH,QAAQZ,IAAAA,IAAQ;QAC9BkE,IAAAA,GAAO,GADuB;;QAIhC,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,EAA2B,OAA3B,EAAoC,QAApC,EAA8C,MAA9C,EAAsDxP,OAAtD,CAA8DsL,IAA9D,MACE,CAAC,CADH,IAEA6D,SAAAA,CAAUnK,MAAAA,CAAOsG,IAAPtG,CAAVmK,GACA;aACO;;;YAEDzB,MAAMpC,QAAQtG,MAAAA,CAAOsG,IAAPtG,CAAAA,GAAewK;AAVvC;;ACXF;;;;;;;;;;AAQA,SAAwBC,aAAxB,CAAsCzO,OAAtC,EAA+C0O,UAA/C,EAA2D;SAClD3G,KAAK2G,YAAYxD,QAAQ,UAASZ,IAAT,EAAe;UACvCC,KAAAA,GAAQmE,UAAAA,CAAWpE,IAAXoE;;QACVnE,KAAAA,KAAU,OAAO;cACXoE,aAAarE,MAAMoE,UAAAA,CAAWpE,IAAXoE;AAD7B,WAEO;cACG9B,gBAAgBtC;;AAL5B;;ACJF;;;;;;;;;;;AASA,SAAwBsE,UAAxB,CAAmC/D,IAAnC,EAAyC;;;;;YAK7BA,IAAAA,CAAKgE,QAALhE,CAAc5D,QAAQ4D,IAAAA,CAAK7G,QALE;;;gBASzB6G,IAAAA,CAAKgE,QAALhE,CAAc5D,QAAQ4D,IAAAA,CAAK6D,YATF;;MAYnC7D,IAAAA,CAAKiE,YAALjE,IAAqB/C,MAAAA,CAAOC,IAAPD,CAAY+C,IAAAA,CAAKkE,WAAjBjH,EAA8BlJ,QAAQ;cACnDiM,IAAAA,CAAKiE,cAAcjE,IAAAA,CAAKkE;;;SAG7BlE;;;;;;;;;;;;;;AAaT,SAAgBmE,gBAAhB,CACE9H,SADF,EAEED,MAFF,EAGEsE,OAHF,EAIE0D,eAJF,EAKErG,KALF,EAME;;QAEMY,gBAAAA,GAAmBb,mBAAAA,CAAoBC,KAApBD,EAA2B1B,MAA3B0B,EAAmCzB,SAAnCyB,EAA8C4C,OAAAA,CAAQC,aAAtD7C,EAFzB;;;;QAOMjB,SAAAA,GAAYD,oBAAAA,CAChB8D,OAAAA,CAAQ7D,SADQD,EAEhB+B,gBAFgB/B,EAGhBR,MAHgBQ,EAIhBP,SAJgBO,EAKhB8D,OAAAA,CAAQX,SAARW,CAAkBE,IAAlBF,CAAuBnE,iBALPK,EAMhB8D,OAAAA,CAAQX,SAARW,CAAkBE,IAAlBF,CAAuBpE,OANPM;SASXkH,aAAa,eAAejH,WAhBnC;;;YAoBUT,QAAQ;AAAE0E,IAAAA,QAAAA,EAAUJ,OAAAA,CAAQC,aAARD,GAAwB,OAAxBA,GAAkC;AAA9C;SAEXA;;ACvET;;;;;;;;;;;;;;;;;;;;;AAmBA,SAAwB2D,iBAAxB,CAA0CrE,IAA1C,EAAgDsE,WAAhD,EAA6D;QACrD;AAAElI,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwB2D,IAAAA,CAAKjG;QAC7B;AAAEwK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmB9K;;QACnB+K,OAAAA,GAAUC,CAAAA,IAAKA;;QAEfC,cAAAA,GAAiBJ,KAAAA,CAAMlI,SAAAA,CAAUrC,KAAhBuK;QACjBK,WAAAA,GAAcL,KAAAA,CAAMnI,MAAAA,CAAOpC,KAAbuK;QAEdM,UAAAA,GAAa,CAAC,MAAD,EAAS,OAAT,EAAkB1Q,OAAlB,CAA0B6L,IAAAA,CAAKnD,SAA/B,MAA8C,CAAC;QAC5DiI,WAAAA,GAAc9E,IAAAA,CAAKnD,SAALmD,CAAe7L,OAAf6L,CAAuB,GAAvBA,MAAgC,CAAC;QAC/C+E,eAAAA,GAAkBJ,cAAAA,GAAiB,CAAjBA,KAAuBC,WAAAA,GAAc;QACvDI,YAAAA,GAAeL,cAAAA,GAAiB,CAAjBA,KAAuB,CAAvBA,IAA4BC,WAAAA,GAAc,CAAdA,KAAoB;QAE/DK,mBAAAA,GAAsB,CAACX,WAAD,GACxBG,OADwB,GAExBI,UAAAA,IAAcC,WAAdD,IAA6BE,eAA7BF,GACAN,KADAM,GAEAL;QACEU,iBAAAA,GAAoB,CAACZ,WAAD,GAAeG,OAAf,GAAyBF;SAE5C;UACCU,mBAAAA,CACJD,YAAAA,IAAgB,CAACF,WAAjBE,IAAgCV,WAAhCU,GACI5I,MAAAA,CAAOpD,IAAPoD,GAAc,CADlB4I,GAEI5I,MAAAA,CAAOpD,IAHPiM,CADD;SAMAC,iBAAAA,CAAkB9I,MAAAA,CAAOtD,GAAzBoM,CANA;YAOGA,iBAAAA,CAAkB9I,MAAAA,CAAOrD,MAAzBmM,CAPH;WAQED,mBAAAA,CAAoB7I,MAAAA,CAAOnD,KAA3BgM;AARF;;;AChCT,MAAME,SAAAA,GAAYnR,SAAAA,IAAa,WAAWmC,IAAX,CAAgBlC,SAAAA,CAAUC,SAA1B,CAA/B;;;;;;;;;AASA,SAAwBkR,YAAxB,CAAqCpF,IAArC,EAA2CU,OAA3C,EAAoD;QAC5C;AAAExC,IAAAA,CAAF;AAAKE,IAAAA;AAAL,MAAWsC;QACX;AAAEtE,IAAAA;AAAF,MAAa4D,IAAAA,CAAKjG,QAF0B;;QAK5CsL,2BAAAA,GAA8BlG,IAAAA,CAClCa,IAAAA,CAAKgE,QAALhE,CAAcD,SADoBZ,EAElCtG,QAAAA,IAAYA,QAAAA,CAASwI,IAATxI,KAAkB,YAFIsG,CAAAA,CAGlCmG;;MACED,2BAAAA,KAAgClF,WAAW;YACrCG,KACN;;;QAGEgF,eAAAA,GACJD,2BAAAA,KAAgClF,SAAhCkF,GACIA,2BADJA,GAEI3E,OAAAA,CAAQ4E;QAERzO,YAAAA,GAAeH,eAAAA,CAAgBsJ,IAAAA,CAAKgE,QAALhE,CAAc5D,MAA9B1F;QACf6O,gBAAAA,GAAmBrL,qBAAAA,CAAsBrD,YAAtBqD,EApByB;;QAuB5Cf,MAAAA,GAAS;cACHiD,MAAAA,CAAO0E;AADJ;QAIT/G,OAAAA,GAAUsK,iBAAAA,CACdrE,IADcqE,EAEd3Q,MAAAA,CAAO8R,gBAAP9R,GAA0B,CAA1BA,IAA+B,CAACyR,SAFlBd;QAKVhL,KAAAA,GAAQ6E,CAAAA,KAAM,QAANA,GAAiB,KAAjBA,GAAyB;QACjC5E,KAAAA,GAAQ8E,CAAAA,KAAM,OAANA,GAAgB,MAAhBA,GAAyB,QAjCW;;;;QAsC5CqH,gBAAAA,GAAmBnE,wBAAAA,CAAyB,WAAzBA,EAtCyB;;;;;;;;;;MAiD9CtI,MAAMF;;MACNO,KAAAA,KAAU,UAAU;;;QAGlBxC,YAAAA,CAAalB,QAAbkB,KAA0B,QAAQ;YAC9B,CAACA,YAAAA,CAAa0D,YAAd,GAA6BR,OAAAA,CAAQhB;AAD7C,WAEO;YACC,CAACwM,gBAAAA,CAAiBtL,MAAlB,GAA2BF,OAAAA,CAAQhB;;AAN7C,SAQO;UACCgB,OAAAA,CAAQjB;;;MAEZQ,KAAAA,KAAU,SAAS;QACjBzC,YAAAA,CAAalB,QAAbkB,KAA0B,QAAQ;aAC7B,CAACA,YAAAA,CAAayD,WAAd,GAA4BP,OAAAA,CAAQd;AAD7C,WAEO;aACE,CAACsM,gBAAAA,CAAiBvL,KAAlB,GAA0BD,OAAAA,CAAQd;;AAJ7C,SAMO;WACEc,OAAAA,CAAQf;;;MAEbsM,eAAAA,IAAmBG,kBAAkB;WAChCA,oBAAqB,eAAczM,IAAK,OAAMF,GAAI;WAClDO,SAAS;WACTC,SAAS;WACT0I,aAAa;AAJtB,SAKO;;UAEC0D,SAAAA,GAAYrM,KAAAA,KAAU,QAAVA,GAAqB,CAAC,CAAtBA,GAA0B;UACtCsM,UAAAA,GAAarM,KAAAA,KAAU,OAAVA,GAAoB,CAAC,CAArBA,GAAyB;WACrCD,SAASP,GAAAA,GAAM4M;WACfpM,SAASN,IAAAA,GAAO2M;WAChB3D,aAAc,GAAE3I,KAAM,KAAIC,KAAM;GAjFS;;;QAqF5CuK,UAAAA,GAAa;mBACF7D,IAAAA,CAAKnD;AADH,IArF+B;;OA0F7CgH,aAAL,QAAA,CAAA,EAAA,EAAuBA,UAAvB,EAAsC7D,IAAAA,CAAK6D,UAA3C;OACK1K,SAAL,QAAA,CAAA,EAAA,EAAmBA,MAAnB,EAA8B6G,IAAAA,CAAK7G,MAAnC;OACK+K,cAAL,QAAA,CAAA,EAAA,EAAwBlE,IAAAA,CAAKjG,OAALiG,CAAa4F,KAArC,EAA+C5F,IAAAA,CAAKkE,WAApD;SAEOlE;;AC5GT;;;;;;;;;;;;AAUA,SAAwB6F,kBAAxB,CACE9F,SADF,EAEE+F,cAFF,EAGEC,aAHF,EAIE;QACMC,UAAAA,GAAa7G,IAAAA,CAAKY,SAALZ,EAAgB,CAAC;AAAEkC,IAAAA;AAAF,GAAD,KAAcA,IAAAA,KAASyE,cAAvC3G;QAEb8G,UAAAA,GACJ,CAAC,CAACD,UAAF,IACAjG,SAAAA,CAAUqB,IAAVrB,CAAelH,QAAAA,IAAY;WAEvBA,QAAAA,CAASwI,IAATxI,KAAkBkN,aAAlBlN,IACAA,QAAAA,CAAS0H,OADT1H,IAEAA,QAAAA,CAASvB,KAATuB,GAAiBmN,UAAAA,CAAW1O;AAJhC,GAAAyI;;MAQE,CAACkG,YAAY;UACTD,UAAAA,GAAc,KAAIF,cAAe;UACjCI,SAAAA,GAAa,KAAIH,aAAc;YAC7BzF,KACL,GAAE4F,SAAU,4BAA2BF,UAAW,4DAA2DA,UAAW;;;SAGtHC;;AC/BT;;;;;;;;;AAOA,SAAwBL,KAAxB,CAA8B5F,IAA9B,EAAoCU,OAApC,EAA6C;;MAEvC,CAACmF,kBAAAA,CAAmB7F,IAAAA,CAAKgE,QAALhE,CAAcD,SAAjC8F,EAA4C,OAA5CA,EAAqD,cAArDA,GAAsE;WAClE7F;;;MAGLiE,YAAAA,GAAevD,OAAAA,CAAQvL,QANgB;;MASvC,OAAO8O,YAAP,KAAwB,UAAU;mBACrBjE,IAAAA,CAAKgE,QAALhE,CAAc5D,MAAd4D,CAAqBmG,aAArBnG,CAAmCiE,YAAnCjE,EADqB;;QAIhC,CAACiE,cAAc;aACVjE;;AALX,SAOO;;;QAGD,CAACA,IAAAA,CAAKgE,QAALhE,CAAc5D,MAAd4D,CAAqB/H,QAArB+H,CAA8BiE,YAA9BjE,GAA6C;cACxCM,KACN;aAEKN;;;;QAILnD,SAAAA,GAAYmD,IAAAA,CAAKnD,SAALmD,CAAenC,KAAfmC,CAAqB,GAArBA,EAA0B,CAA1BA;QACZ;AAAE5D,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwB2D,IAAAA,CAAKjG;QAC7B8K,UAAAA,GAAa,CAAC,MAAD,EAAS,OAAT,EAAkB1Q,OAAlB,CAA0B0I,SAA1B,MAAyC,CAAC;QAEvDuJ,GAAAA,GAAMvB,UAAAA,GAAa,QAAbA,GAAwB;QAC9BwB,eAAAA,GAAkBxB,UAAAA,GAAa,KAAbA,GAAqB;QACvCzM,IAAAA,GAAOiO,eAAAA,CAAgBC,WAAhBD;QACPE,OAAAA,GAAU1B,UAAAA,GAAa,MAAbA,GAAsB;QAChC2B,MAAAA,GAAS3B,UAAAA,GAAa,QAAbA,GAAwB;QACjC4B,gBAAAA,GAAmBxI,aAAAA,CAAcgG,YAAdhG,CAAAA,CAA4BmI,GAA5BnI,EApCkB;;;;;;MA4CvC5B,SAAAA,CAAUmK,MAAVnK,CAAAA,GAAoBoK,gBAApBpK,GAAuCD,MAAAA,CAAOhE,IAAPgE,GAAc;SAClDrC,QAAQqC,OAAOhE,SAClBgE,MAAAA,CAAOhE,IAAPgE,CAAAA,IAAgBC,SAAAA,CAAUmK,MAAVnK,CAAAA,GAAoBoK,gBAApCrK;GA9CuC;;;MAiDvCC,SAAAA,CAAUjE,IAAViE,CAAAA,GAAkBoK,gBAAlBpK,GAAqCD,MAAAA,CAAOoK,MAAPpK,GAAgB;SAClDrC,QAAQqC,OAAOhE,SAClBiE,SAAAA,CAAUjE,IAAViE,CAAAA,GAAkBoK,gBAAlBpK,GAAqCD,MAAAA,CAAOoK,MAAPpK;;;OAEpCrC,QAAQqC,SAAStC,aAAAA,CAAckG,IAAAA,CAAKjG,OAALiG,CAAa5D,MAA3BtC,EArDqB;;QAwDrC4M,MAAAA,GAASrK,SAAAA,CAAUjE,IAAViE,CAAAA,GAAkBA,SAAAA,CAAU+J,GAAV/J,CAAAA,GAAiB,CAAnCA,GAAuCoK,gBAAAA,GAAmB,EAxD9B;;;QA4DrCjR,GAAAA,GAAMN,wBAAAA,CAAyB8K,IAAAA,CAAKgE,QAALhE,CAAc5D,MAAvClH;QACNyR,gBAAAA,GAAmBpN,UAAAA,CAAW/D,GAAAA,CAAK,SAAQ6Q,eAAgB,EAA7B7Q,CAAX+D,EAA4C,EAA5CA;QACnBqN,gBAAAA,GAAmBrN,UAAAA,CAAW/D,GAAAA,CAAK,SAAQ6Q,eAAgB,OAA7B7Q,CAAX+D,EAAiD,EAAjDA;MACrBsN,SAAAA,GACFH,MAAAA,GAAS1G,IAAAA,CAAKjG,OAALiG,CAAa5D,MAAb4D,CAAoB5H,IAApB4H,CAAT0G,GAAqCC,gBAArCD,GAAwDE,iBAhEf;;cAmE/BlN,IAAAA,CAAKC,GAALD,CAASA,IAAAA,CAAKoN,GAALpN,CAAS0C,MAAAA,CAAOgK,GAAPhK,CAAAA,GAAcqK,gBAAvB/M,EAAyCmN,SAAzCnN,CAATA,EAA8D,CAA9DA;OAEPuK,eAAeA;OACflK,QAAQ6L,QAAQ;KAClBxN,OAAOsB,IAAAA,CAAK6K,KAAL7K,CAAWmN,SAAXnN,CADW;KAElB6M,UAAU,EAFQ,CAAA;;AAAA;SAKdvG;;ACvFT;;;;;;;;;AAOA,SAAwB+G,oBAAxB,CAA6CnJ,SAA7C,EAAwD;MAClDA,SAAAA,KAAc,OAAO;WAChB;AADT,SAEO,IAAIA,SAAAA,KAAc,OAAlB,EAA2B;WACzB;;;SAEFA;;ACbT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,IAAA,UAAA,GAAe,CACb,YADa,EAEb,MAFa,EAGb,UAHa,EAIb,WAJa,EAKb,KALa,EAMb,SANa,EAOb,aAPa,EAQb,OARa,EASb,WATa,EAUb,YAVa,EAWb,QAXa,EAYb,cAZa,EAab,UAba,EAcb,MAda,EAeb,YAfa,CAAf,EC7BA;;AACA,MAAMoJ,eAAAA,GAAkBC,UAAAA,CAAW7G,KAAX6G,CAAiB,CAAjBA,CAAxB;;;;;;;;;;;;AAYA,SAAwBC,SAAxB,CAAkCrK,SAAlC,EAA6CsK,OAAAA,GAAU,KAAvD,EAA8D;QACtDC,KAAAA,GAAQJ,eAAAA,CAAgB7S,OAAhB6S,CAAwBnK,SAAxBmK;QACR5H,GAAAA,GAAM4H,eAAAA,CACT5G,KADS4G,CACHI,KAAAA,GAAQ,CADLJ,EAETK,MAFSL,CAEFA,eAAAA,CAAgB5G,KAAhB4G,CAAsB,CAAtBA,EAAyBI,KAAzBJ,CAFEA;SAGLG,OAAAA,GAAU/H,GAAAA,CAAIkI,OAAJlI,EAAV+H,GAA0B/H;;;ACZnC,MAAMmI,SAAAA,GAAY;QACV,MADU;aAEL,WAFK;oBAGE;AAHF,CAAlB;;;;;;;;;AAaA,SAAwB3G,IAAxB,CAA6BZ,IAA7B,EAAmCU,OAAnC,EAA4C;;MAEtCQ,iBAAAA,CAAkBlB,IAAAA,CAAKgE,QAALhE,CAAcD,SAAhCmB,EAA2C,OAA3CA,GAAqD;WAChDlB;;;MAGLA,IAAAA,CAAKwH,OAALxH,IAAgBA,IAAAA,CAAKnD,SAALmD,KAAmBA,IAAAA,CAAKa,mBAAmB;;WAEtDb;;;QAGHxD,UAAAA,GAAaL,aAAAA,CACjB6D,IAAAA,CAAKgE,QAALhE,CAAc5D,MADGD,EAEjB6D,IAAAA,CAAKgE,QAALhE,CAAc3D,SAFGF,EAGjBuE,OAAAA,CAAQpE,OAHSH,EAIjBuE,OAAAA,CAAQnE,iBAJSJ,EAKjB6D,IAAAA,CAAKW,aALYxE;MAQfU,SAAAA,GAAYmD,IAAAA,CAAKnD,SAALmD,CAAenC,KAAfmC,CAAqB,GAArBA,EAA0B,CAA1BA;MACZyH,iBAAAA,GAAoBnJ,oBAAAA,CAAqBzB,SAArByB;MACpBV,SAAAA,GAAYoC,IAAAA,CAAKnD,SAALmD,CAAenC,KAAfmC,CAAqB,GAArBA,EAA0B,CAA1BA,KAAgC;MAE5C0H,SAAAA,GAAY;;UAERhH,OAAAA,CAAQiH;SACTJ,SAAAA,CAAUK;kBACD,CAAC/K,SAAD,EAAY4K,iBAAZ;;;SAETF,SAAAA,CAAUM;kBACDX,SAAAA,CAAUrK,SAAVqK;;;SAETK,SAAAA,CAAUO;kBACDZ,SAAAA,CAAUrK,SAAVqK,EAAqB,IAArBA;;;;kBAGAxG,OAAAA,CAAQiH;;;YAGdtH,QAAQ,CAAC0H,IAAD,EAAOX,KAAP,KAAiB;QAC7BvK,SAAAA,KAAckL,IAAdlL,IAAsB6K,SAAAA,CAAU3T,MAAV2T,KAAqBN,KAAAA,GAAQ,GAAG;aACjDpH;;;gBAGGA,IAAAA,CAAKnD,SAALmD,CAAenC,KAAfmC,CAAqB,GAArBA,EAA0B,CAA1BA;wBACQ1B,oBAAAA,CAAqBzB,SAArByB;UAEdO,aAAAA,GAAgBmB,IAAAA,CAAKjG,OAALiG,CAAa5D;UAC7B4L,UAAAA,GAAahI,IAAAA,CAAKjG,OAALiG,CAAa3D,UATC;;UAY3BmI,KAAAA,GAAQ9K,IAAAA,CAAK8K;UACbyD,WAAAA,GACHpL,SAAAA,KAAc,MAAdA,IACC2H,KAAAA,CAAM3F,aAAAA,CAAc5F,KAApBuL,CAAAA,GAA6BA,KAAAA,CAAMwD,UAAAA,CAAWhP,IAAjBwL,CAD9B3H,IAEAA,SAAAA,KAAc,OAAdA,IACC2H,KAAAA,CAAM3F,aAAAA,CAAc7F,IAApBwL,CAAAA,GAA4BA,KAAAA,CAAMwD,UAAAA,CAAW/O,KAAjBuL,CAH7B3H,IAIAA,SAAAA,KAAc,KAAdA,IACC2H,KAAAA,CAAM3F,aAAAA,CAAc9F,MAApByL,CAAAA,GAA8BA,KAAAA,CAAMwD,UAAAA,CAAWlP,GAAjB0L,CAL/B3H,IAMAA,SAAAA,KAAc,QAAdA,IACC2H,KAAAA,CAAM3F,aAAAA,CAAc/F,GAApB0L,CAAAA,GAA2BA,KAAAA,CAAMwD,UAAAA,CAAWjP,MAAjByL;UAEzB0D,aAAAA,GAAgB1D,KAAAA,CAAM3F,aAAAA,CAAc7F,IAApBwL,CAAAA,GAA4BA,KAAAA,CAAMhI,UAAAA,CAAWxD,IAAjBwL;UAC5C2D,cAAAA,GAAiB3D,KAAAA,CAAM3F,aAAAA,CAAc5F,KAApBuL,CAAAA,GAA6BA,KAAAA,CAAMhI,UAAAA,CAAWvD,KAAjBuL;UAC9C4D,YAAAA,GAAe5D,KAAAA,CAAM3F,aAAAA,CAAc/F,GAApB0L,CAAAA,GAA2BA,KAAAA,CAAMhI,UAAAA,CAAW1D,GAAjB0L;UAC1C6D,eAAAA,GACJ7D,KAAAA,CAAM3F,aAAAA,CAAc9F,MAApByL,CAAAA,GAA8BA,KAAAA,CAAMhI,UAAAA,CAAWzD,MAAjByL;UAE1B8D,mBAAAA,GACHzL,SAAAA,KAAc,MAAdA,IAAwBqL,aAAxBrL,IACAA,SAAAA,KAAc,OAAdA,IAAyBsL,cADzBtL,IAEAA,SAAAA,KAAc,KAAdA,IAAuBuL,YAFvBvL,IAGAA,SAAAA,KAAc,QAAdA,IAA0BwL,gBAjCI;;UAoC3BxD,UAAAA,GAAa,CAAC,KAAD,EAAQ,QAAR,EAAkB1Q,OAAlB,CAA0B0I,SAA1B,MAAyC,CAAC,EApC5B;;UAuC3B0L,qBAAAA,GACJ,CAAC,CAAC7H,OAAAA,CAAQ8H,cAAV,KACE3D,UAAAA,IAAcjH,SAAAA,KAAc,OAA5BiH,IAAuCqD,aAAvCrD,IACCA,UAAAA,IAAcjH,SAAAA,KAAc,KAA5BiH,IAAqCsD,cADtCtD,IAEC,CAACA,UAAD,IAAejH,SAAAA,KAAc,OAA7B,IAAwCwK,YAFzCvD,IAGC,CAACA,UAAD,IAAejH,SAAAA,KAAc,KAA7B,IAAsCyK,eAJzC,EAxC+B;;UA+C3BI,yBAAAA,GACJ,CAAC,CAAC/H,OAAAA,CAAQgI,uBAAV,KACE7D,UAAAA,IAAcjH,SAAAA,KAAc,OAA5BiH,IAAuCsD,cAAvCtD,IACCA,UAAAA,IAAcjH,SAAAA,KAAc,KAA5BiH,IAAqCqD,aADtCrD,IAEC,CAACA,UAAD,IAAejH,SAAAA,KAAc,OAA7B,IAAwCyK,eAFzCxD,IAGC,CAACA,UAAD,IAAejH,SAAAA,KAAc,KAA7B,IAAsCwK,YAJzC;UAMIO,gBAAAA,GAAmBJ,qBAAAA,IAAyBE;;QAE9CR,WAAAA,IAAeK,mBAAfL,IAAsCU,kBAAkB;;WAErDnB,UAAU;;UAEXS,WAAAA,IAAeK,qBAAqB;oBAC1BZ,SAAAA,CAAUN,KAAAA,GAAQ,CAAlBM;;;UAGViB,kBAAkB;oBACR5B,oBAAAA,CAAqBnJ,SAArBmJ;;;WAGTlK,YAAYA,SAAAA,IAAae,SAAAA,GAAY,MAAMA,SAAlBA,GAA8B,EAA3Cf,EAZyC;;;WAgBrD9C,QAAQqC,SAAb,QAAA,CAAA,EAAA,EACK4D,IAAAA,CAAKjG,OAALiG,CAAa5D,MADlB,EAEKsC,gBAAAA,CACDsB,IAAAA,CAAKgE,QAALhE,CAAc5D,MADbsC,EAEDsB,IAAAA,CAAKjG,OAALiG,CAAa3D,SAFZqC,EAGDsB,IAAAA,CAAKnD,SAHJ6B,CAFL;aASOoB,YAAAA,CAAaE,IAAAA,CAAKgE,QAALhE,CAAcD,SAA3BD,EAAsCE,IAAtCF,EAA4C,MAA5CA;;AAjFX;SAoFOE;;AChJT;;;;;;;;;AAOA,SAAwB4I,YAAxB,CAAqC5I,IAArC,EAA2C;QACnC;AAAE5D,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwB2D,IAAAA,CAAKjG;QAC7B8C,SAAAA,GAAYmD,IAAAA,CAAKnD,SAALmD,CAAenC,KAAfmC,CAAqB,GAArBA,EAA0B,CAA1BA;QACZwE,KAAAA,GAAQ9K,IAAAA,CAAK8K;QACbK,UAAAA,GAAa,CAAC,KAAD,EAAQ,QAAR,EAAkB1Q,OAAlB,CAA0B0I,SAA1B,MAAyC,CAAC;QACvDzE,IAAAA,GAAOyM,UAAAA,GAAa,OAAbA,GAAuB;QAC9B2B,MAAAA,GAAS3B,UAAAA,GAAa,MAAbA,GAAsB;QAC/B5F,WAAAA,GAAc4F,UAAAA,GAAa,OAAbA,GAAuB;;MAEvCzI,MAAAA,CAAOhE,IAAPgE,CAAAA,GAAeoI,KAAAA,CAAMnI,SAAAA,CAAUmK,MAAVnK,CAANmI,GAA0B;SACtCzK,QAAQqC,OAAOoK,UAClBhC,KAAAA,CAAMnI,SAAAA,CAAUmK,MAAVnK,CAANmI,CAAAA,GAA2BpI,MAAAA,CAAO6C,WAAP7C;;;MAE3BA,MAAAA,CAAOoK,MAAPpK,CAAAA,GAAiBoI,KAAAA,CAAMnI,SAAAA,CAAUjE,IAAViE,CAANmI,GAAwB;SACtCzK,QAAQqC,OAAOoK,UAAUhC,KAAAA,CAAMnI,SAAAA,CAAUjE,IAAViE,CAANmI;;;SAGzBxE;;ACpBT;;;;;;;;;;;;;;AAYA,SAAgB6I,OAAhB,CAAwBC,GAAxB,EAA6B7J,WAA7B,EAA0CJ,aAA1C,EAAyDF,gBAAzD,EAA2E;;QAEnEd,KAAAA,GAAQiL,GAAAA,CAAIlJ,KAAJkJ,CAAU,2BAAVA;QACRpJ,KAAAA,GAAQ,CAAC7B,KAAAA,CAAM,CAANA;QACT8F,IAAAA,GAAO9F,KAAAA,CAAM,CAANA,EAJ4D;;MAOrE,CAAC6B,OAAO;WACHoJ;;;MAGLnF,IAAAA,CAAKxP,OAALwP,CAAa,GAAbA,MAAsB,GAAG;QACvBxO;;YACIwO;WACD;kBACO9E;;;WAEP;WACA;;kBAEOF;;;UAGRlG,IAAAA,GAAOqB,aAAAA,CAAc3E,OAAd2E;WACNrB,IAAAA,CAAKwG,WAALxG,CAAAA,GAAoB,GAApBA,GAA0BiH;AAbnC,SAcO,IAAIiE,IAAAA,KAAS,IAATA,IAAiBA,IAAAA,KAAS,IAA9B,EAAoC;;QAErCoF;;QACApF,IAAAA,KAAS,MAAM;aACVjK,IAAAA,CAAKC,GAALD,CACL/F,QAAAA,CAASgD,eAAThD,CAAyB4G,YADpBb,EAELhG,MAAAA,CAAOmI,WAAPnI,IAAsB,CAFjBgG;AADT,WAKO;aACEA,IAAAA,CAAKC,GAALD,CACL/F,QAAAA,CAASgD,eAAThD,CAAyB2G,WADpBZ,EAELhG,MAAAA,CAAOkI,UAAPlI,IAAqB,CAFhBgG;;;WAKFqP,IAAAA,GAAO,GAAPA,GAAarJ;AAdf,GAAA,MAeA;;;WAGEA;;;;;;;;;;;;;;;;AAeX,SAAgBsJ,WAAhB,CACElN,MADF,EAEE+C,aAFF,EAGEF,gBAHF,EAIEsK,aAJF,EAKE;QACMlP,OAAAA,GAAU,CAAC,CAAD,EAAI,CAAJ,EADhB;;;;QAMMmP,SAAAA,GAAY,CAAC,OAAD,EAAU,MAAV,EAAkB/U,OAAlB,CAA0B8U,aAA1B,MAA6C,CAAC,EANhE;;;QAUME,SAAAA,GAAYrN,MAAAA,CAAO+B,KAAP/B,CAAa,SAAbA,EAAwBqB,GAAxBrB,CAA4BsN,IAAAA,IAAQA,IAAAA,CAAKC,IAALD,EAApCtN,EAVlB;;;QAcMwN,OAAAA,GAAUH,SAAAA,CAAUhV,OAAVgV,CACdhK,IAAAA,CAAKgK,SAALhK,EAAgBiK,IAAAA,IAAQA,IAAAA,CAAKG,MAALH,CAAY,MAAZA,MAAwB,CAAC,CAAjDjK,CADcgK;;MAIZA,SAAAA,CAAUG,OAAVH,CAAAA,IAAsBA,SAAAA,CAAUG,OAAVH,CAAAA,CAAmBhV,OAAnBgV,CAA2B,GAA3BA,MAAoC,CAAC,GAAG;YACxD7I,KACN;GApBJ;;;;QA0BMkJ,UAAAA,GAAa;MACfC,GAAAA,GAAMH,OAAAA,KAAY,CAAC,CAAbA,GACN,CACEH,SAAAA,CACG/I,KADH+I,CACS,CADTA,EACYG,OADZH,EAEG9B,MAFH8B,CAEU,CAACA,SAAAA,CAAUG,OAAVH,CAAAA,CAAmBtL,KAAnBsL,CAAyBK,UAAzBL,EAAqC,CAArCA,CAAD,CAFVA,CADF,EAIE,CAACA,SAAAA,CAAUG,OAAVH,CAAAA,CAAmBtL,KAAnBsL,CAAyBK,UAAzBL,EAAqC,CAArCA,CAAD,EAA0C9B,MAA1C,CACE8B,SAAAA,CAAU/I,KAAV+I,CAAgBG,OAAAA,GAAU,CAA1BH,CADF,CAJF,CADMG,GASN,CAACH,SAAD,EApCJ;;QAuCMM,GAAAA,CAAItM,GAAJsM,CAAQ,CAACC,EAAD,EAAKtC,KAAL,KAAe;;UAErBnI,WAAAA,GAAc,CAACmI,KAAAA,KAAU,CAAVA,GAAc,CAAC8B,SAAf9B,GAA2B8B,SAA5B,IAChB,QADgB,GAEhB;QACAS,iBAAAA,GAAoB;WAEtBD,EAAAA;;AAAAA,KAGGE,MAHHF,CAGU,CAACpM,CAAD,EAAIC,CAAJ,KAAU;UACZD,CAAAA,CAAEA,CAAAA,CAAEvJ,MAAFuJ,GAAW,CAAbA,CAAAA,KAAoB,EAApBA,IAA0B,CAAC,GAAD,EAAM,GAAN,EAAWnJ,OAAX,CAAmBoJ,CAAnB,MAA0B,CAAC,GAAG;UACxDD,CAAAA,CAAEvJ,MAAFuJ,GAAW,KAAKC;4BACE;eACbD;AAHT,aAIO,IAAIqM,iBAAJ,EAAuB;UAC1BrM,CAAAA,CAAEvJ,MAAFuJ,GAAW,MAAMC;4BACC;eACbD;AAHF,OAAA,MAIA;eACEA,CAAAA,CAAE+J,MAAF/J,CAASC,CAATD;;AAbb,KAAAoM,EAeK,EAfLA;AAAAA,KAiBGvM,GAjBHuM,CAiBOZ,GAAAA,IAAOD,OAAAA,CAAQC,GAARD,EAAa5J,WAAb4J,EAA0BhK,aAA1BgK,EAAyClK,gBAAzCkK,CAjBda;AAPE,GAAAD,EAvCN;;MAoEIpJ,QAAQ,CAACqJ,EAAD,EAAKtC,KAAL,KAAe;OACtB/G,QAAQ,CAAC+I,IAAD,EAAOS,MAAP,KAAkB;UACvBvG,SAAAA,CAAU8F,IAAV9F,GAAiB;gBACX8D,UAAUgC,IAAAA,IAAQM,EAAAA,CAAGG,MAAAA,GAAS,CAAZH,CAAAA,KAAmB,GAAnBA,GAAyB,CAAC,CAA1BA,GAA8B,CAAtCN;;AAFtB;AADF;SAOOrP;;;;;;;;;;;;;AAYT,SAAwB+B,MAAxB,CAA+BkE,IAA/B,EAAqC;AAAElE,EAAAA;AAAF,CAArC,EAAiD;QACzC;AAAEe,IAAAA,SAAF;AAAa9C,IAAAA,OAAAA,EAAS;AAAEqC,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAAtB,MAAgD2D;QAChDiJ,aAAAA,GAAgBpM,SAAAA,CAAUgB,KAAVhB,CAAgB,GAAhBA,EAAqB,CAArBA;MAElB9C;;MACAuJ,SAAAA,CAAU,CAACxH,MAAXwH,GAAoB;cACZ,CAAC,CAACxH,MAAF,EAAU,CAAV;AADZ,SAEO;cACKkN,WAAAA,CAAYlN,MAAZkN,EAAoB5M,MAApB4M,EAA4B3M,SAA5B2M,EAAuCC,aAAvCD;;;MAGRC,aAAAA,KAAkB,QAAQ;WACrBnQ,OAAOiB,OAAAA,CAAQ,CAARA;WACPf,QAAQe,OAAAA,CAAQ,CAARA;AAFjB,SAGO,IAAIkP,aAAAA,KAAkB,OAAtB,EAA+B;WAC7BnQ,OAAOiB,OAAAA,CAAQ,CAARA;WACPf,QAAQe,OAAAA,CAAQ,CAARA;AAFV,GAAA,MAGA,IAAIkP,aAAAA,KAAkB,KAAtB,EAA6B;WAC3BjQ,QAAQe,OAAAA,CAAQ,CAARA;WACRjB,OAAOiB,OAAAA,CAAQ,CAARA;AAFT,GAAA,MAGA,IAAIkP,aAAAA,KAAkB,QAAtB,EAAgC;WAC9BjQ,QAAQe,OAAAA,CAAQ,CAARA;WACRjB,OAAOiB,OAAAA,CAAQ,CAARA;;;OAGXqC,SAASA;SACP4D;;AC5LT;;;;;;;;;AAOA,SAAwB8J,eAAxB,CAAwC9J,IAAxC,EAA8CU,OAA9C,EAAuD;MACjDnE,iBAAAA,GACFmE,OAAAA,CAAQnE,iBAARmE,IAA6BhK,eAAAA,CAAgBsJ,IAAAA,CAAKgE,QAALhE,CAAc5D,MAA9B1F,EAFsB;;;;MAOjDsJ,IAAAA,CAAKgE,QAALhE,CAAc3D,SAAd2D,KAA4BzD,mBAAmB;wBAC7B7F,eAAAA,CAAgB6F,iBAAhB7F;GAR+B;;;;;QAc/CqT,aAAAA,GAAgBzI,wBAAAA,CAAyB,WAAzBA;QAChB0I,YAAAA,GAAehK,IAAAA,CAAKgE,QAALhE,CAAc5D,MAAd4D,CAAqB6B,MAfW,CAAA;;QAgB/C;AAAE/I,IAAAA,GAAF;AAAOE,IAAAA,IAAP;AAAa,KAAC+Q,aAAD,GAAiBE;AAA9B,MAA4CD;eACrClR,MAAM;eACNE,OAAO;eACP+Q,iBAAiB;QAExBvN,UAAAA,GAAaL,aAAAA,CACjB6D,IAAAA,CAAKgE,QAALhE,CAAc5D,MADGD,EAEjB6D,IAAAA,CAAKgE,QAALhE,CAAc3D,SAFGF,EAGjBuE,OAAAA,CAAQpE,OAHSH,EAIjBI,iBAJiBJ,EAKjB6D,IAAAA,CAAKW,aALYxE,EArBkC;;;eA+BxCrD,MAAMA;eACNE,OAAOA;eACP+Q,iBAAiBE;UAEtBzN,aAAaA;QAEflF,KAAAA,GAAQoJ,OAAAA,CAAQwJ;MAClB9N,MAAAA,GAAS4D,IAAAA,CAAKjG,OAALiG,CAAa5D;QAEpBiD,KAAAA,GAAQ;YACJxC,WAAW;UACb6C,KAAAA,GAAQtD,MAAAA,CAAOS,SAAPT;;UAEVA,MAAAA,CAAOS,SAAPT,CAAAA,GAAoBI,UAAAA,CAAWK,SAAXL,CAApBJ,IACA,CAACsE,OAAAA,CAAQyJ,qBACT;gBACQzQ,IAAAA,CAAKC,GAALD,CAAS0C,MAAAA,CAAOS,SAAPT,CAAT1C,EAA4B8C,UAAAA,CAAWK,SAAXL,CAA5B9C;;;aAEH;AAAE,SAACmD,SAAD,GAAa6C;AAAf;AATG,KAAA;;cAWF7C,WAAW;YACbkC,QAAAA,GAAWlC,SAAAA,KAAc,OAAdA,GAAwB,MAAxBA,GAAiC;UAC9C6C,KAAAA,GAAQtD,MAAAA,CAAO2C,QAAP3C;;UAEVA,MAAAA,CAAOS,SAAPT,CAAAA,GAAoBI,UAAAA,CAAWK,SAAXL,CAApBJ,IACA,CAACsE,OAAAA,CAAQyJ,qBACT;gBACQzQ,IAAAA,CAAKoN,GAALpN,CACN0C,MAAAA,CAAO2C,QAAP3C,CADM1C,EAEN8C,UAAAA,CAAWK,SAAXL,CAAAA,IACGK,SAAAA,KAAc,OAAdA,GAAwBT,MAAAA,CAAOpC,KAA/B6C,GAAuCT,MAAAA,CAAOnC,MADjDuC,CAFM9C;;;aAMH;AAAE,SAACqF,QAAD,GAAYW;AAAd;;;AAxBG;QA4BRW,QAAQxD,SAAAA,IAAa;UACnBzE,IAAAA,GACJ,CAAC,MAAD,EAAS,KAAT,EAAgBjE,OAAhB,CAAwB0I,SAAxB,MAAuC,CAAC,CAAxC,GAA4C,SAA5C,GAAwD;0BAC5CT,QAAWiD,KAAAA,CAAMjH,IAANiH,CAAAA,CAAYxC,SAAZwC;AAH3B;OAMKtF,QAAQqC,SAASA;SAEf4D;;ACvFT;;;;;;;;;AAOA,SAAwBoK,KAAxB,CAA8BpK,IAA9B,EAAoC;QAC5BnD,SAAAA,GAAYmD,IAAAA,CAAKnD;QACjBoM,aAAAA,GAAgBpM,SAAAA,CAAUgB,KAAVhB,CAAgB,GAAhBA,EAAqB,CAArBA;QAChBwN,cAAAA,GAAiBxN,SAAAA,CAAUgB,KAAVhB,CAAgB,GAAhBA,EAAqB,CAArBA,EAHW;;MAM9BwN,gBAAgB;UACZ;AAAEhO,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAAwB4D,IAAAA,CAAKjG;UAC7B8K,UAAAA,GAAa,CAAC,QAAD,EAAW,KAAX,EAAkB1Q,OAAlB,CAA0B8U,aAA1B,MAA6C,CAAC;UAC3D7Q,IAAAA,GAAOyM,UAAAA,GAAa,MAAbA,GAAsB;UAC7B5F,WAAAA,GAAc4F,UAAAA,GAAa,OAAbA,GAAuB;UAErCyF,YAAAA,GAAe;aACZ;AAAE,SAAClS,IAAD,GAAQiE,SAAAA,CAAUjE,IAAViE;AAAV,OADY;WAEd;SACFjE,OAAOiE,SAAAA,CAAUjE,IAAViE,CAAAA,GAAkBA,SAAAA,CAAU4C,WAAV5C,CAAlBA,GAA2CD,MAAAA,CAAO6C,WAAP7C;AADhD;AAFc;SAOhBrC,QAAQqC,SAAb,QAAA,CAAA,EAAA,EAA2BA,MAA3B,EAAsCkO,YAAAA,CAAaD,cAAbC,CAAtC;;;SAGKtK;;AC1BT;;;;;;;;;AAOA,SAAwBuK,IAAxB,CAA6BvK,IAA7B,EAAmC;MAC7B,CAAC6F,kBAAAA,CAAmB7F,IAAAA,CAAKgE,QAALhE,CAAcD,SAAjC8F,EAA4C,MAA5CA,EAAoD,iBAApDA,GAAwE;WACpE7F;;;QAGHlD,OAAAA,GAAUkD,IAAAA,CAAKjG,OAALiG,CAAa3D;QACvBmO,KAAAA,GAAQrL,IAAAA,CACZa,IAAAA,CAAKgE,QAALhE,CAAcD,SADFZ,EAEZtG,QAAAA,IAAYA,QAAAA,CAASwI,IAATxI,KAAkB,iBAFlBsG,CAAAA,CAGZ3C;;MAGAM,OAAAA,CAAQ/D,MAAR+D,GAAiB0N,KAAAA,CAAM1R,GAAvBgE,IACAA,OAAAA,CAAQ9D,IAAR8D,GAAe0N,KAAAA,CAAMvR,KADrB6D,IAEAA,OAAAA,CAAQhE,GAARgE,GAAc0N,KAAAA,CAAMzR,MAFpB+D,IAGAA,OAAAA,CAAQ7D,KAAR6D,GAAgB0N,KAAAA,CAAMxR,MACtB;;QAEIgH,IAAAA,CAAKuK,IAALvK,KAAc,MAAM;aACfA;;;SAGJuK,OAAO;SACP1G,WAAW,yBAAyB;AAZ3C,SAaO;;QAED7D,IAAAA,CAAKuK,IAALvK,KAAc,OAAO;aAChBA;;;SAGJuK,OAAO;SACP1G,WAAW,yBAAyB;;;SAGpC7D;;ACzCT;;;;;;;;;AAOA,SAAwByK,KAAxB,CAA8BzK,IAA9B,EAAoC;QAC5BnD,SAAAA,GAAYmD,IAAAA,CAAKnD;QACjBoM,aAAAA,GAAgBpM,SAAAA,CAAUgB,KAAVhB,CAAgB,GAAhBA,EAAqB,CAArBA;QAChB;AAAET,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwB2D,IAAAA,CAAKjG;QAC7B+E,OAAAA,GAAU,CAAC,MAAD,EAAS,OAAT,EAAkB3K,OAAlB,CAA0B8U,aAA1B,MAA6C,CAAC;QAExDyB,cAAAA,GAAiB,CAAC,KAAD,EAAQ,MAAR,EAAgBvW,OAAhB,CAAwB8U,aAAxB,MAA2C,CAAC;SAE5DnK,OAAAA,GAAU,MAAVA,GAAmB,SACxBzC,SAAAA,CAAU4M,aAAV5M,CAAAA,IACCqO,cAAAA,GAAiBtO,MAAAA,CAAO0C,OAAAA,GAAU,OAAVA,GAAoB,QAA3B1C,CAAjBsO,GAAwD,CADzDrO;OAGGQ,YAAYyB,oBAAAA,CAAqBzB,SAArByB;OACZvE,QAAQqC,SAAStC,aAAAA,CAAcsC,MAAdtC;SAEfkG;;ACdT;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAA,SAAA,GAAe;;;;;;;;;SASN;;WAEE,GAFF;;;aAII,IAJJ;;;QAMDoK;AANC,GATM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAwDL;;WAEC,GAFD;;;aAIG,IAJH;;;QAMFtO,MANE;;;;;YAUE;AAVF,GAxDK;;;;;;;;;;;;;;;;;;;mBAsFI;;WAER,GAFQ;;;aAIN,IAJM;;;QAMXgO,eANW;;;;;;;cAYL,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,CAZK;;;;;;;;aAmBN,CAnBM;;;;;;;uBAyBI;AAzBJ,GAtFJ;;;;;;;;;;;gBA2HC;;WAEL,GAFK;;;aAIH,IAJG;;;QAMRlB;AANQ,GA3HD;;;;;;;;;;;;SA8IN;;WAEE,GAFF;;;aAII,IAJJ;;;QAMDhD,KANC;;;aAQI;AARJ,GA9IM;;;;;;;;;;;;;QAoKP;;WAEG,GAFH;;;aAIK,IAJL;;;QAMAhF,IANA;;;;;;;;cAaM,MAbN;;;;;;aAkBK,CAlBL;;;;;;;;uBAyBe,UAzBf;;;;;;;;;oBAiCY,KAjCZ;;;;;;;;;6BAyCqB;AAzCrB,GApKO;;;;;;;;;SAuNN;;WAEE,GAFF;;;aAII,KAJJ;;;QAMD6J;AANC,GAvNM;;;;;;;;;;;;QA0OP;;WAEG,GAFH;;;aAIK,IAJL;;;QAMAF;AANA,GA1OO;;;;;;;;;;;;;;;;;gBAkQC;;WAEL,GAFK;;;aAIH,IAJG;;;QAMRnF,YANQ;;;;;;;qBAYK,IAZL;;;;;;;OAkBT,QAlBS;;;;;;;OAwBT;AAxBS,GAlQD;;;;;;;;;;;;;;;;;cA4SD;;WAEH,GAFG;;;aAID,IAJC;;;QAMNrB,UANM;;;YAQFI,gBARE;;;;;;;;qBAeOhE;AAfP;AA5SC,CAAf;;;;;;;;;;;;;;;;;;;;AC9BA;;;;;;;;;;;;;;;;;AAgBA,IAAA,QAAA,GAAe;;;;;aAKF,QALE;;;;;;iBAWE,KAXF;;;;;;iBAiBE,IAjBF;;;;;;;mBAwBI,KAxBJ;;;;;;;;YAgCH,MAAM,CAhCH,CAAA;;;;;;;;;;YA0CH,MAAM,CA1CH,CAAA;;;;;;;;AAAA,CAAf;;;;;;;;;;AClBA;AACA;;AAIA,MAOqBwK,MAPrB,CAO4B;;;;;;;;;cASdtO,WAAWD,QAAQsE,OAAAA,GAAU,IAAI;SAyF7CyC,iBAAiB,MAAMyH,qBAAAA,CAAsB,KAAKpK,MAA3BoK,EAzFsB;;;SAEtCpK,SAASqK,QAAAA,CAAS,KAAKrK,MAAL,CAAYsK,IAAZ,CAAiB,IAAjB,CAATD,EAF6B;;SAKtCnK,UAAL,QAAA,CAAA,EAAA,EAAoBiK,MAAAA,CAAOI,QAA3B,EAAwCrK,OAAxC,EAL2C;;SAQtC3C,QAAQ;mBACE,KADF;iBAEA,KAFA;qBAGI;AAHJ,MAR8B;;SAetC1B,YAAYA,SAAAA,IAAaA,SAAAA,CAAU2O,MAAvB3O,GAAgCA,SAAAA,CAAU,CAAVA,CAAhCA,GAA+CA;SAC3DD,SAASA,MAAAA,IAAUA,MAAAA,CAAO4O,MAAjB5O,GAA0BA,MAAAA,CAAO,CAAPA,CAA1BA,GAAsCA,OAhBT;;SAmBtCsE,QAAQX,YAAY;WAClB7C,KAAP,QAAA,CAAA,EAAA,EACKyN,MAAAA,CAAOI,QAAPJ,CAAgB5K,SADrB,EAEKW,OAAAA,CAAQX,SAFb,GAGGM,QAAQgB,IAAAA,IAAQ;WACZX,QAAQX,UAAUsB,QAAvB,QAAA,CAAA,EAAA,EAEMsJ,MAAAA,CAAOI,QAAPJ,CAAgB5K,SAAhB4K,CAA0BtJ,IAA1BsJ,KAAmC,EAFzC,EAIMjK,OAAAA,CAAQX,SAARW,GAAoBA,OAAAA,CAAQX,SAARW,CAAkBW,IAAlBX,CAApBA,GAA8C,EAJpD;AAJF,OApB2C;;SAiCtCX,YAAY9C,MAAAA,CAAOC,IAAPD,CAAY,KAAKyD,OAAL,CAAaX,SAAzB9C,EACdE,GADcF,CACVoE,IAAAA,IAAAA,QAAAA,CAAAA;;AAAAA,KAAAA,EAEA,KAAKX,OAAL,CAAaX,SAAb,CAAuBsB,IAAvB,CAFAA,CADUpE;AAAAA,KAMdI,IANcJ,CAMT,CAACK,CAAD,EAAIC,CAAJ,KAAUD,CAAAA,CAAEhG,KAAFgG,GAAUC,CAAAA,CAAEjG,KANb2F,EAjC0B;;;;;SA6CtC8C,UAAUM,QAAQ+D,eAAAA,IAAmB;UACpCA,eAAAA,CAAgB7D,OAAhB6D,IAA2BvP,UAAAA,CAAWuP,eAAAA,CAAgB6G,MAA3BpW,GAAoC;wBACjDoW,OACd,KAAK5O,WACL,KAAKD,QACL,KAAKsE,SACL0D,iBACA,KAAKrG;;AAPX,OA7C2C;;SA0DtCyC;UAECyC,aAAAA,GAAgB,KAAKvC,OAAL,CAAauC;;QAC/BA,eAAe;;WAEZC;;;SAGFnF,MAAMkF,gBAAgBA;GA3EH;;;;WAgFjB;WACAzC,MAAAA,CAAOvL,IAAPuL,CAAY,IAAZA;;;YAEC;WACDsB,OAAAA,CAAQ7M,IAAR6M,CAAa,IAAbA;;;yBAEc;WACdoB,oBAAAA,CAAqBjO,IAArBiO,CAA0B,IAA1BA;;;0BAEe;WACfjB,qBAAAA,CAAsBhN,IAAtBgN,CAA2B,IAA3BA;;;;;;;;;;;;;;;;;;;;;;;;;;AA1FiB;;;;;;;;;;;;;;;;;;;;;;AAAP0I,MAAAA,CAoHZO,KApHYP,GAoHJ,CAAC,OAAOjX,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCyX,MAA1C,EAAkDC,WApH9CT;AAAAA,MAAAA,CAsHZ1D,UAtHY0D,GAsHC1D,UAtHD0D;AAAAA,MAAAA,CAwHZI,QAxHYJ,GAwHDI,QAxHCJ","file":"popper.846ebf99.map","sourceRoot":"../src","sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`], 10) +\n    parseFloat(styles[`border${sideB}Width`], 10)\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"]}